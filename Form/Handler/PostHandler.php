<?php

namespace Soloist\Bundle\BlogBundle\Form\Handler;

use Symfony\Component\HttpFoundation\Request,
    Symfony\Component\Form\FormFactory,
    Symfony\Component\Form\Form;

use Doctrine\ORM\EntityManager;

use FrequenceWeb\Bundle\DashboardBundle\Crud\Form\Handler;

class PostHandler extends Handler
{
    /**
     * Where will be upload the file
     * @var string
     */
    private $uploadPath;

    /**
     * Set basic variables
     * @param EntityManager $em          The entity manager
     * @param FormFactory   $formFactory Allow the handler to create the form
     * @param string        $uploadPath
     */
    public function __construct(EntityManager $em, FormFactory $formFactory, $uploadPath)
    {
        parent::__construct($em, $formFactory);
        $this->uploadPath   = $uploadPath;
    }

    /**
     * Create a new post
     * @param  Form    $form    Post form (generate by the parent)
     * @param  Request $request
     * @return boolean           Is all ok with the form ?
     */
    public function create(Form $form, Request $request)
    {
        $form->bindRequest($request);
        if ($form->isValid()) {
            $post = $form->getData();

            // Upload
            $file = $post->getImage();
            if($file) {

                $name = uniqid()
                    . $this->sanitize($file->getClientOriginalName())
                    . '.' .$file->guessExtension();
                $file->move($this->uploadPath, $name);

                $post->setImage($name);
            }

            $this->em->persist($post);
            $this->em->flush();

            return true;
        }

        return false;
    }

    /**
     * Update a form
     * @param  Form    $form    Post form (generated by the parent)
     * @param  Request $request
     * @return boolean           Is all ok with the form ?
     */
    public function update(Form $form, Request $request)
    {
        $post = $form->getData();
        $old = $post->getImage();

        $form->bindRequest($request);
        if ($form->isValid()) {

            // Upload
            $file = $post->getImage();
            if($file) {

                if(!is_null($image = $post->getImage())) {
                    // Deletion image
                    $name = $image;
                    $path = $this->uploadPath . $name;

                    if(is_file($path)) {
                        unlink($path);
                    }
                }

                $name = uniqid()
                    . $this->sanitize($file->getClientOriginalName())
                    . '.' .$file->guessExtension();
                $file->move($this->uploadPath, $name);

                $post->setImage($name);

            } else {
                $post->setImage($old);
            }

            $this->em->flush();

            return true;
        }

        return false;
    }



    /**
     * Return a sanitized filename
     *
     * @param string $name
     * @return string
     */
    private function sanitize($name)
    {
        return strtolower(preg_replace('([^_a-zA-Z0-9])', '_', $name));
    }
}
